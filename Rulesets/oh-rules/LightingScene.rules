// https://community.openhab.org/t/3-different-methods-to-use-scenes-with-google-home-openhab/42859

rule "Lighting Scene Wakeup"
when
	Item Scene_Wakeup received command ON
then
	Light_FF_Kitchen_Sink.sendCommand(25)
	FF_Kitchen_Island.sendCommand(25)	
	Light_SF_Landing_Lamp.sendCommand(50)

    Scene_Wakeup.postUpdate(OFF)
end



rule "Lighting Scene Evening"
when
	Item Scene_Evening received command ON
then
	EveningLights.sendCommand(ON)
	LEDStrip_Group2_Power.sendCommand(Scene_Evening_Kitchen_Strip_Power.state as OnOffType)
	LEDStrip_Group2_Color.sendCommand(Scene_Evening_Kitchen_Strip_Color.state as HSBType)
	FF_Kitchen_Recessed.sendCommand(Scene_Evening_Light_FF_Kitchen_Recessed.state as DecimalType)
	Light_FF_Kitchen_Sink.sendCommand(Scene_Evening_Light_FF_Kitchen_Sink.state as DecimalType)

    Scene_Evening.postUpdate(OFF)
end



// rule "Lighting Scene"
// when
   
//     //Use this block if you're on OpenHAB 2.2 or below

//     // Item Scene_Evening received command ON or
//     // Item Scene_Night received command ON

//     // Member of LightingScenes received command ON //Use this line if you're on OpenHAB 2.3 or later

// then
//     // Get the Group of Items that are controlled during this scene
//     val items = Scene_Items.members.findFirst[ grp | grp.name == triggeringItem.name+"_Items" ] as GroupItem

//     // Loop through all the Items controlled by this scene
//     items.members.forEach[ GenericItem i |

//         //logInfo("Lights", "Lighting Rule getting " + triggeringItem.name+"_"+i.name + " state")

//         // Get the state for this Item and Scene
 
//         val sceneState = Scene_States.members.findFirst[ GenericItem st | st.name == triggeringItem.name+"_"+i.name ]

//         //logInfo("Lights", triggeringItem.name+"_"+i.name + " state: " + sceneState.state)
//         //logInfo("Lights", "Item to change: " + i.name)

//         // sendCommand the Scene state
//         if(sceneState !== null)
//         {i.sendCommand(sceneState.state.toString)}
//     ]

//     triggeringItem.sendCommand(OFF)
// end

rule "Lighting Scene Evening Config Store"
when
	Item Scene_Evening_Store received command ON
then
	Scene_Evening_LEDStrip_Kitchen_Cabinet_Power.sendCommand(LEDStrip_Kitchen_Cabinet_Power.state as OnOffType)
	Scene_Evening_LEDStrip_Kitchen_Cabinet_Color.sendCommand(LEDStrip_Kitchen_Cabinet_Color.state as HSBType)
	Scene_Evening_Light_FF_Kitchen_Recessed.sendCommand(Light_FF_Kitchen_Recessed.state as DecimalType)

    Scene_Evening_Store.postUpdate(OFF)
end

rule "Lighting Scene Night Config Store"
when
	Item Scene_Night_Store received command ON
then
	Scene_Night_LEDStrip_Kitchen_Cabinet_Power.sendCommand(LEDStrip_Kitchen_Cabinet_Power.state as OnOffType)
	Scene_Night_LEDStrip_Kitchen_Cabinet_Color.sendCommand(LEDStrip_Kitchen_Cabinet_Color.state as HSBType)
	Scene_Night_Light_FF_Kitchen_Recessed.sendCommand(Light_FF_Kitchen_Recessed.state as DecimalType)

    Scene_Night_Store.postUpdate(OFF)
end